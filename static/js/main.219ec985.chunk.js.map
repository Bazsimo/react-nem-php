{"version":3,"sources":["Components/PostForm.js","Components/Post.js","Components/EditComponent.js","Components/AllPost.js","App.js","Components/Header.js","reducers/postReducer.js","index.js"],"names":["PostForm","handleSubmit","e","preventDefault","title","getTitle","value","message","getMessage","author","getAuthor","data","id","Date","editing","props","dispatch","type","className","onSubmit","this","required","ref","input","placeholder","rows","Component","connect","Post","Fragment","post","onClick","EditComponent","handleEdit","newTitle","newMessage","newAuthor","defaultValue","AllPost","posts","map","key","state","App","postReducer","action","concat","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.219ec985.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PostForm extends Component {\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const title = this.getTitle.value;\r\n        const message =  this.getMessage.value;\r\n        const author =  this.getAuthor.value;\r\n        const data = {\r\n            id: new Date(),\r\n            title,\r\n            message,\r\n            author,\r\n            editing:false\r\n        };\r\n        this.props.dispatch({\r\n            type:'ADD_POST',\r\n            data\r\n        });\r\n        this.getTitle.value = '';\r\n        this.getMessage.value = '';\r\n        this.getAuthor.value = '';\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card p-3 bg-light mb-2\">\r\n                <h2 className=\"h2 text-muted\">Create Post</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input required type=\"text\"\r\n                            ref={(input) => this.getTitle = input}\r\n                            placeholder=\"Enter Post Title\" className=\"form-control mb-2\"/>\r\n                        <textarea required rows=\"3\"\r\n                            ref={(input) => this.getMessage = input}\r\n                            placeholder=\"Enter Post\" className=\"form-control mb-4\"/>\r\n                        <input\r\n                        ref={(input) => this.getAuthor = input}\r\n                        placeholder=\"Enter Author\" className=\"form-control mb-4\"/>\r\n                        <button className=\"btn btn-outline-primary\">Enter</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(PostForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Post extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <tr className=\"d-flex\">\r\n                    <th className=\"col-5\">{this.props.post.title}</th>\r\n                    <td className=\"col-4\">{this.props.post.author}</td>\r\n                    <td className=\"col-3\">\r\n                        <button className=\"btn btn-outline-info btn-block\"\r\n                            onClick={()=>this.props.dispatch({type:'EDIT_POST',id:this.props.post.id})}>\r\n                            <i className=\"fa fa-edit\"> Edit</i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                <tr className=\"d-flex\">\r\n                    <td className=\"col-9\">{this.props.post.message}</td>\r\n                    <td className=\"col-3\">\r\n                        <button className=\"btn btn-outline-danger btn-block\"\r\n                            onClick={()=>this.props.dispatch({type:'DELETE_POST',id:this.props.post.id})}>\r\n                            <i className=\"fa fa-trash\"> Delete</i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Post);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass EditComponent extends Component {\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        const newTitle = this.getTitle.value;\r\n        const newMessage = this.getMessage.value;\r\n        const newAuthor = this.getAuthor.value;\r\n        const data = {\r\n            newTitle,\r\n            newMessage,\r\n            newAuthor\r\n        };\r\n        this.props.dispatch({ type: 'UPDATE', id: this.props.post.id, data: data })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleEdit}>\r\n                    <div className=\"form-group m-3\">\r\n                        <input required type=\"text\"\r\n                               ref={(input) => this.getTitle = input}\r\n                               defaultValue={this.props.post.title}\r\n                               placeholder=\"Enter Post Title\" className=\"form-control mb-2\"/>\r\n                        <textarea required rows=\"3\"\r\n                                  ref={(input) => this.getMessage = input}\r\n                                  defaultValue={this.props.post.message}\r\n                                  placeholder=\"Enter Post\" className=\"form-control mb-4\"/>\r\n                        <input\r\n                            ref={(input) => this.getAuthor = input}\r\n                            defaultValue={this.props.post.author}\r\n                            placeholder=\"Enter Author\" className=\"form-control mb-4\"/>\r\n                        <button className=\"btn btn-outline-primary\">Update</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect()(EditComponent);\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport Post from \"./Post\";\r\nimport EditComponent from './EditComponent';\r\n\r\nclass AllPost extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card p-3\">\r\n                <h3 className=\"h3 text-muted\">All Posts</h3>\r\n                <table className=\"table table-bordered table-sm\">\r\n                    <thead>\r\n                    <tr className=\"d-flex\">\r\n                        <th className=\"col-5\">Title</th>\r\n                        <th className=\"col-4\">Author</th>\r\n                        <th className=\"col-3\"/>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.posts.map((post) => (\r\n                        <div key={post.id}>\r\n                            {post.editing ? <EditComponent post={post} key={post.id} /> :\r\n                                <Post key={post.id} post={post} />}\r\n                        </div>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(AllPost);\r\n","import React, { Component } from 'react';\nimport PostForm from \"./Components/PostForm\";\nimport AllPost from \"./Components/AllPost\";\nimport Header from \"./Components/Header\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App card-body bg-light-grey align-items-center w-50 m-auto w-main\">\n            <PostForm></PostForm>\n            <AllPost></AllPost>\n        </div>\n    );\n  }\n}\nexport default App;\n","import React, {Component} from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card m-0 p-1 mb-2\">\r\n                <nav className=\"btn-group-lg d-lg-inline-flex\">\r\n                    <button className=\"btn btn-primary btn-group-lg m-1\" >Feature1</button>\r\n                    <button className=\"btn btn-primary btn-group-lg m-1\" >Feature2</button>\r\n                    <button className=\"btn btn-primary btn-group-lg m-1\" >Feature3</button>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","const postReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_POST':\r\n            return state.concat([action.data]);\r\n        case 'DELETE_POST':\r\n            return state.filter((post)=>post.id !== action.id);\r\n        case 'EDIT_POST':\r\n            return state.map((post)=>post.id === action.id ? {...post,editing:!post.editing}:post);\r\n        case 'UPDATE':\r\n            return state.map((post)=>{\r\n                if(post.id === action.id) {\r\n                    return {\r\n                        ...post,\r\n                        title:action.data.newTitle,\r\n                        message:action.data.newMessage,\r\n                        author:action.data.newAuthor,\r\n                        editing: !post.editing\r\n                    }\r\n                } else return post;\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default postReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from \"react-redux\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport postReducer from \"./reducers/postReducer\";\n\nconst store = createStore(postReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}